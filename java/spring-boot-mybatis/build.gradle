buildscript {
    ext {
        springBootVersion = '2.1.2.RELEASE'
        lombokVersion = '1.18.4'
        mapstructVersion = '1.2.0.Final'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}


subprojects {
    apply plugin: 'maven'
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    repositories {
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
        mavenCentral()
    }

    group = 'me.warriorg.me.warriorg.sbm.anotation.sbm'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '1.8'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    configurations {
        provided
    }

    dependencies {
        compileOnly "org.projectlombok:lombok:${lombokVersion}",
                "org.mapstruct:mapstruct-jdk8:${mapstructVersion}"



        annotationProcessor "org.projectlombok:lombok:${lombokVersion}",
                "org.mapstruct:mapstruct-processor:${mapstructVersion}"

        testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}",
                "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    }

    task wrapper(type: Wrapper) {
        gradleVersion = '4.7'
    }
}

project(':sbm-api') {
    dependencies {
        compile project(':sbm-dto')
        compile project(':sbm-service')
    }
}

project(':sbm-api-shared') {
    dependencies {
        compile project(':sbm-dto')
    }
}

project(':sbm-service') {
    dependencies {
        compile project(':sbm-dto')
    }
}


project(':sbm-service-annotation') {
    dependencies {
        compile project(':sbm-dto')
    }
}

project(':sbm-service-xml') {
    dependencies {
        compile project(':sbm-dto')
    }
}